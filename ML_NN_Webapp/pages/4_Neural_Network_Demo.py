import streamlit as st
from PIL import Image
import numpy as np
import pickle
import os

st.title("üß† Neural Network Model Demo for Image Classification")

uploaded_image = st.file_uploader("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û (Dog or Cat)", type=["jpg", "png"])

if uploaded_image is not None:
    
    img = Image.open(uploaded_image)
    img = img.convert("RGB")
    img = img.resize((100, 100))
    img_array = np.array(img) / 255.0
    img_array = img_array.reshape((1, 100, 100, 3))
 
    st.image(img, caption="Uploaded Image", use_container_width=True)

    # ‡πÉ‡∏ä‡πâ relative path ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏°‡πÄ‡∏î‡∏•
    base_path = os.path.dirname(__file__)
    model_path = os.path.join(base_path, "..", "..", "NN_Model", "finalized_model.sav")

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î
    try:
        if os.path.exists(model_path):
            model = pickle.load(open(model_path, 'rb'))
        else:
            st.error(f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: {model_path}")
            model = None
    except Exception as e:
        st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•: {e}")
        model = None

    if model is not None and st.button("üîç ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå"):
        predictions = model.predict(img_array)
        prediction_class = "Dog" if predictions[0][0] < 0.5 else "Cat"
        st.write(f"üîπ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢: {prediction_class}")
